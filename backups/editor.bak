#! /usr/bin/python
import Tkinter
from Tkinter import *
from ScrolledText import * # Because Tkinter textarea does not provide scrolling
import tkFileDialog
import tkMessageBox

root = Tkinter.Tk(className="Editor")
textPad =ScrolledText(root, width=50, height=30)


#creating a menu
def open_file():
		file = tkFileDialog.askopenfile(parent=root,mode='rb',title='Select a file')
		if file != None:
			contents = file.read()
			textPad.insert('1.0',contents)
			file.close()

def save_file():
	file = tkFileDialog.asksaveasfile(mode='w')
	if file != None:
		#slice off the last character from get, as an extra return is added
		data = textPad.get('1.0', END+'-1c')
		file.write(data)
		file.close()

def new_file(key):
	textPad.delete(1.0,END)

def exit():
	if tkMessageBox.askokcancel("Quit", "Do you really want to quit?"):
		root.destroy()

def about():
	label = tkMessageBox.showinfo("About", "Its and editor ya dingus")

def dummy():
	print "stll a dummy"

def colorchange(bgcolor, fgcolor):
	if bgcolor == None:
		textPad.configure(foreground = color)
	else:
		textPad.configure(background = color)

class colorprompt(object):
    def __init__(self,master):
        top=self.top=Toplevel(master)
        self.l=Label(top,text="Hello World")
        self.l.pack()
        self.e=Entry(top)
        self.e.pack()
        self.b=Button(top,text='Ok',command=self.cleanup)
        self.b.pack()
    def cleanup(self):
        self.value=self.e.get()
        self.top.destroy()
		
#adding some keybindings
textPad.bind("<Control-Key-n>", new_file)

	
	
menu = Menu(root)
root.config(menu=menu)
filemenu = Menu(menu)
menu.add_cascade(label="File", menu=filemenu)
filemenu.add_command(label="New", command=new_file)
filemenu.add_command(label="Open...", command=open_file)
filemenu.add_command(label="Save", command=save_file)
filemenu.add_separator()
filemenu.add_command(label="Exit", command=exit)

helpmenu = Menu(menu)
menu.add_cascade(label="Help", menu=helpmenu)
helpmenu.add_command(label="About...", command=about)

stylemenu = Menu(menu)
menu.add_cascade(label="Style", menu=stylemenu)
stylemenu.add_command(label="Colors", command=colorprompt())
#endmenu creation


textPad.pack()
root.mainloop()